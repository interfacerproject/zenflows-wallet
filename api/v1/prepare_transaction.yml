zenchain: 1.0
start: prepare_transaction_1_setup.zen
bloks:
  prepare_transaction_1_setup.zen:
    zenContent: |
      Rule caller restroom-mw

      Given I read the http request
      Given I have a 'string dictionary' named 'http_request'

      # keys
      Given I have a 'string dictionary' named 'post'
      Given I have a 'string dictionary' named 'tokens'

      # data
      Given I have a 'string dictionary' named 'request'
      Given I have a 'string' named 'token' in 'request'

      # prepare query for zenflows
      When I pickup from path 'http_request.headers.zenflows-id'
      When I create the 'string dictionary' named 'variables'
      and I move the 'zenflows-id' to 'id' in 'variables'
      and I move 'variables' in 'post'

      # extract signature
      When I pickup from path 'http_request.headers.zenflows-sign'

      # prepare txid
      When I create the copy of object named by 'token' from dictionary 'tokens'
      and I rename 'copy' to 'token_txid'

      Then print the 'post'
      Then print the 'request'
      Then print the 'zenflows-sign'
      Then print the 'token_txid'
    keys: _keys_setup.keys
    next: prepare_transaction_2_verify.zen
  prepare_transaction_2_verify.zen:
    zenContent: |
      Rule caller restroom-mw
      Scenario 'eddsa': verify signature

      Given I have a endpoint named 'zenflows-endpoint'
      Given I connect to 'zenflows-endpoint' and pass it the content of 'post' and save the output into 'zenflows-result'
      Given I have a 'base58 dictionary' named 'zenflows-result'

      # data
      Given I have a 'string' named 'token_txid'
      Given I have a 'eddsa signature' named 'zenflows-sign'
      Given I have a 'string dictionary' named 'request'

      # verify signature
      When I pickup a 'eddsa public key' from path 'zenflows-result.result.data'
      and I rename 'data' to 'sender'
      When I verify the 'request' has a eddsa signature in 'zenflows-sign' by 'sender'

      Then print the 'sender'
      Then print the 'amount' from 'request'
      Then print the 'token_txid'
    keys: _keys_zenflows_endpoint.keys
    next: prepare_transaction_3_prepare_transaction.zen
  prepare_transaction_3_prepare_transaction.zen:
    zenContent: |
      Rule caller restroom-mw
      Scenario 'eddsa': Public keys
      Scenario 'planetmint': Sign the planetmint transaction

      Given I have a planetmint endpoint named 'planetmint-endpoint'
      Given I prepare the planetmint transaction to transfer 'amount' of 'token_txid' from 'sender' to 'receiver'
      Given I have a 'string' named 'planetmint transaction'

      Then print the 'planetmint transaction'
    keysFile: _keys_planetmint.keys
